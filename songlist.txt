package com.molcon.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.json.JSONArray;
import org.json.JSONObject;

import com.molcon.utility.AppProperty;

public class GetConsultantDetails {
	static String driver = AppProperty.getProperty("mysql.jdbc.driver");
	static String url = AppProperty.getProperty("mysql.jdbc.url");
	static String userName = AppProperty.getProperty("mysql.jdbc.username");
	static String password = AppProperty.getProperty("mysql.jdbc.password");
	static HashMap map=new HashMap();
	public StringBuilder getTheConsultantIdFromAttendance() {
		// TODO Auto-generated method stub
		
		StringBuilder sb=new StringBuilder();	
	     Connection con=null;
		 PreparedStatement preparedStatement=null;
		 ResultSet rs=null;
		 String compiledQuery = "select distinct(emp_code) from employeetime where emp_code like'INT%'";	 	
		try {
			Class.forName(driver);
			con=DriverManager.getConnection(url,userName,password);
			preparedStatement = con.prepareStatement(compiledQuery);
			rs=preparedStatement.executeQuery();
			while(rs.next())
			{
				String employeeId=rs.getString(1);
				Pattern p = Pattern.compile("\\d+");
				Matcher m = p.matcher(employeeId);
				String number = null;
				if(m.find()) {
		            
		             number=m.group();
		        }			
				sb.append("'"+"INT "+number+"'");
				sb.append(",");			
			}
			sb.deleteCharAt(sb.length()-1);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		finally{
			try {
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return sb;
	}
	public JSONArray getFiveDaysWorkEmployeeDetails(StringBuilder sb) {
		// TODO Auto-generated method stub
		Connection con=null;
		 PreparedStatement preparedStatement=null;
		 ResultSet rs=null;
		 JSONArray jsonArray=new JSONArray();
		String compiledQuery = "select * from dss.offsite_employees where emp_id in("+sb+")and project_name not in(Select project_name from project_details)";	 	
		String queryOne="select * from dss.offsite_employees where emp_id in(select emp_id FROM fiveday_employees)";
		try {
			Class.forName(driver);
			con=DriverManager.getConnection(url,userName,password);
			preparedStatement = con.prepareStatement(compiledQuery);
			rs=preparedStatement.executeQuery();
			while(rs.next())
			{
				JSONObject jsonObject=new JSONObject();
				jsonObject.put("emp_id",rs.getString("emp_id"));
				jsonObject.put("name",rs.getString("name"));
				jsonObject.put("project",rs.getString("project_name"));
				jsonArray.put(jsonObject);
				
			}
		}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		finally{
			try {
				preparedStatement.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		try {
			preparedStatement = con.prepareStatement(queryOne);
			rs=preparedStatement.executeQuery();
			while(rs.next())
			{
				JSONObject jsonObject=new JSONObject();
				String emp_id=rs.getString("emp_id");
				map.put(emp_id, emp_id);
				jsonObject.put("emp_id",emp_id);
				jsonObject.put("name",rs.getString("name"));
				jsonObject.put("project",rs.getString("project_name"));
				jsonArray.put(jsonObject);
				
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			try {
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		

		return jsonArray;
			}
	public JSONArray getSixDaysWorkEmployeeDetails(StringBuilder sb) {
		// TODO Auto-generated method stub	
		JSONArray jsonArrayDetails=new JSONArray();
		Connection con=null;
		 PreparedStatement preparedStatement=null;
		 ResultSet rs=null;
		 String compiledQuery = "select * from dss.offsite_employees where emp_id in("+sb+")and project_name in(Select project_name from project_details);";	 	
		try {
			Class.forName(driver);
			con=DriverManager.getConnection(url,userName,password);
			preparedStatement = con.prepareStatement(compiledQuery);
			rs=preparedStatement.executeQuery();
			while(rs.next())
			{
				JSONObject jsonObject=new JSONObject();
				if(!(map.containsKey(rs.getString("emp_id"))))
				{
				jsonObject.put("emp_id",rs.getString("emp_id"));
				jsonObject.put("name",rs.getString("name"));
				jsonObject.put("project",rs.getString("project_name"));
				jsonArrayDetails.put(jsonObject);
				}
			}
		}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		return jsonArrayDetails;
	}

}
